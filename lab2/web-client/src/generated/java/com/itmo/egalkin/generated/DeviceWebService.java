
package com.itmo.egalkin.generated;

import java.util.List;
import java.util.concurrent.Future;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.AsyncHandler;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.Response;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.7-b01-
 * Generated source version: 2.1
 * 
 */
@WebService(name = "DeviceWebService", targetNamespace = "http://service.egalkin.itmo.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface DeviceWebService {


    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg4
     * @param arg1
     * @param arg0
     * @return
     *     returns javax.xml.ws.Response<com.itmo.egalkin.generated.CreateDeviceResponse>
     */
    @WebMethod(operationName = "createDevice")
    @RequestWrapper(localName = "createDevice", targetNamespace = "http://service.egalkin.itmo.com/", className = "com.itmo.egalkin.generated.CreateDevice")
    @ResponseWrapper(localName = "createDeviceResponse", targetNamespace = "http://service.egalkin.itmo.com/", className = "com.itmo.egalkin.generated.CreateDeviceResponse")
    public Response<CreateDeviceResponse> createDeviceAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        double arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        boolean arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        int arg4);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg4
     * @param arg1
     * @param arg0
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "createDevice")
    @RequestWrapper(localName = "createDevice", targetNamespace = "http://service.egalkin.itmo.com/", className = "com.itmo.egalkin.generated.CreateDevice")
    @ResponseWrapper(localName = "createDeviceResponse", targetNamespace = "http://service.egalkin.itmo.com/", className = "com.itmo.egalkin.generated.CreateDeviceResponse")
    public Future<?> createDeviceAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        double arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        boolean arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        int arg4,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<CreateDeviceResponse> asyncHandler);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg4
     * @param arg1
     * @param arg0
     * @return
     *     returns long
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createDevice", targetNamespace = "http://service.egalkin.itmo.com/", className = "com.itmo.egalkin.generated.CreateDevice")
    @ResponseWrapper(localName = "createDeviceResponse", targetNamespace = "http://service.egalkin.itmo.com/", className = "com.itmo.egalkin.generated.CreateDeviceResponse")
    public long createDevice(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        double arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        boolean arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        int arg4);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg4
     * @param arg1
     * @param arg0
     * @return
     *     returns javax.xml.ws.Response<com.itmo.egalkin.generated.GetDevicesResponse>
     */
    @WebMethod(operationName = "getDevices")
    @RequestWrapper(localName = "getDevices", targetNamespace = "http://service.egalkin.itmo.com/", className = "com.itmo.egalkin.generated.GetDevices")
    @ResponseWrapper(localName = "getDevicesResponse", targetNamespace = "http://service.egalkin.itmo.com/", className = "com.itmo.egalkin.generated.GetDevicesResponse")
    public Response<GetDevicesResponse> getDevicesAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        String arg4);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg4
     * @param arg1
     * @param arg0
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "getDevices")
    @RequestWrapper(localName = "getDevices", targetNamespace = "http://service.egalkin.itmo.com/", className = "com.itmo.egalkin.generated.GetDevices")
    @ResponseWrapper(localName = "getDevicesResponse", targetNamespace = "http://service.egalkin.itmo.com/", className = "com.itmo.egalkin.generated.GetDevicesResponse")
    public Future<?> getDevicesAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        String arg4,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<GetDevicesResponse> asyncHandler);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg4
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<com.itmo.egalkin.generated.Device>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getDevices", targetNamespace = "http://service.egalkin.itmo.com/", className = "com.itmo.egalkin.generated.GetDevices")
    @ResponseWrapper(localName = "getDevicesResponse", targetNamespace = "http://service.egalkin.itmo.com/", className = "com.itmo.egalkin.generated.GetDevicesResponse")
    public List<Device> getDevices(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        String arg4);

    /**
     * 
     * @param arg0
     * @return
     *     returns javax.xml.ws.Response<com.itmo.egalkin.generated.DeleteDeviceResponse>
     */
    @WebMethod(operationName = "deleteDevice")
    @RequestWrapper(localName = "deleteDevice", targetNamespace = "http://service.egalkin.itmo.com/", className = "com.itmo.egalkin.generated.DeleteDevice")
    @ResponseWrapper(localName = "deleteDeviceResponse", targetNamespace = "http://service.egalkin.itmo.com/", className = "com.itmo.egalkin.generated.DeleteDeviceResponse")
    public Response<DeleteDeviceResponse> deleteDeviceAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        long arg0);

    /**
     * 
     * @param arg0
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "deleteDevice")
    @RequestWrapper(localName = "deleteDevice", targetNamespace = "http://service.egalkin.itmo.com/", className = "com.itmo.egalkin.generated.DeleteDevice")
    @ResponseWrapper(localName = "deleteDeviceResponse", targetNamespace = "http://service.egalkin.itmo.com/", className = "com.itmo.egalkin.generated.DeleteDeviceResponse")
    public Future<?> deleteDeviceAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        long arg0,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<DeleteDeviceResponse> asyncHandler);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteDevice", targetNamespace = "http://service.egalkin.itmo.com/", className = "com.itmo.egalkin.generated.DeleteDevice")
    @ResponseWrapper(localName = "deleteDeviceResponse", targetNamespace = "http://service.egalkin.itmo.com/", className = "com.itmo.egalkin.generated.DeleteDeviceResponse")
    public String deleteDevice(
        @WebParam(name = "arg0", targetNamespace = "")
        long arg0);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg5
     * @param arg4
     * @param arg1
     * @param arg0
     * @return
     *     returns javax.xml.ws.Response<com.itmo.egalkin.generated.UpdateDeviceResponse>
     */
    @WebMethod(operationName = "updateDevice")
    @RequestWrapper(localName = "updateDevice", targetNamespace = "http://service.egalkin.itmo.com/", className = "com.itmo.egalkin.generated.UpdateDevice")
    @ResponseWrapper(localName = "updateDeviceResponse", targetNamespace = "http://service.egalkin.itmo.com/", className = "com.itmo.egalkin.generated.UpdateDeviceResponse")
    public Response<UpdateDeviceResponse> updateDeviceAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        long arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        double arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        boolean arg4,
        @WebParam(name = "arg5", targetNamespace = "")
        int arg5);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg5
     * @param arg4
     * @param arg1
     * @param arg0
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "updateDevice")
    @RequestWrapper(localName = "updateDevice", targetNamespace = "http://service.egalkin.itmo.com/", className = "com.itmo.egalkin.generated.UpdateDevice")
    @ResponseWrapper(localName = "updateDeviceResponse", targetNamespace = "http://service.egalkin.itmo.com/", className = "com.itmo.egalkin.generated.UpdateDeviceResponse")
    public Future<?> updateDeviceAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        long arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        double arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        boolean arg4,
        @WebParam(name = "arg5", targetNamespace = "")
        int arg5,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<UpdateDeviceResponse> asyncHandler);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg5
     * @param arg4
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateDevice", targetNamespace = "http://service.egalkin.itmo.com/", className = "com.itmo.egalkin.generated.UpdateDevice")
    @ResponseWrapper(localName = "updateDeviceResponse", targetNamespace = "http://service.egalkin.itmo.com/", className = "com.itmo.egalkin.generated.UpdateDeviceResponse")
    public String updateDevice(
        @WebParam(name = "arg0", targetNamespace = "")
        long arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        double arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        boolean arg4,
        @WebParam(name = "arg5", targetNamespace = "")
        int arg5);

}
